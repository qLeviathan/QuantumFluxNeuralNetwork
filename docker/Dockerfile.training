FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PATH="/opt/conda/bin:${PATH}"
ENV PYTHONPATH="/workspace:${PYTHONPATH}"

# Install essential packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    wget \
    curl \
    ca-certificates \
    build-essential \
    cmake \
    ninja-build \
    libopenmpi-dev \
    openssh-client \
    openssh-server \
    libnccl2 \
    libnccl-dev \
    && rm -rf /var/lib/apt/lists/*

# Setup SSH for distributed training
RUN mkdir -p /var/run/sshd
RUN echo 'root:password' | chpasswd
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config

# Install Miniconda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
    bash /tmp/miniconda.sh -b -p /opt/conda && \
    rm /tmp/miniconda.sh

# Create a new conda environment
RUN conda create -n quantum_flux python=3.10 -y
ENV PATH="/opt/conda/envs/quantum_flux/bin:${PATH}"
SHELL ["/bin/bash", "-c"]

# Copy requirements file
COPY requirements.txt /tmp/requirements.txt

# Install PyTorch and other dependencies
RUN source activate quantum_flux && \
    python -m pip install --no-cache-dir --upgrade pip && \
    python -m pip install --no-cache-dir -r /tmp/requirements.txt && \
    python -m pip install --no-cache-dir torch==2.0.1+cu118 torchvision==0.15.2+cu118 --extra-index-url https://download.pytorch.org/whl/cu118 && \
    conda clean -afy

# Create workspace directory
WORKDIR /workspace

# Copy the quantum_flux package into the image
COPY . /workspace/

# Install the quantum_flux package in development mode
RUN source activate quantum_flux && \
    pip install -e /workspace/

# Create directories for data, outputs, and logs
RUN mkdir -p /workspace/data /workspace/output /workspace/logs

# Pre-create SSH keys for distributed training
RUN mkdir -p /root/.ssh && \
    ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -N "" && \
    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
    echo "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile /dev/null" > /root/.ssh/config

# Set the entrypoint
ENTRYPOINT ["/bin/bash", "-c", "source activate quantum_flux && exec \"$@\"", "--"]

# Default command
CMD ["python", "scripts/train_wandb.py", "--help"]
